BIBFRAME demo

This directory includes files for using the XQuery module to convert
MARCXML to BIBFRAME records within Metaproxy.

In order for this to work, metaproxy and the mp-xquery software modules
must be installed. The conversion uses the marc2bibframe software available
from here: https://github.com/lcnetdev/marc2bibframe

Installation
------------

Before these files can used, Metaproxy and the XQuery module must be
installed.

Metaproxy and XQuery package depend on other packages: libmetaproxy6,
libyaz5, zorba, etc.

These packages can be auto-fetched by adding the Index Data YUM repository.
Refer to http://ftp.indexdata.dk/pub/yaz/redhat/centos/6/README
for more information.

When this repository is enabled, the following command should suffice:
  sudo yum install mp-xquery metaproxy


config.xml
----------

config.xml is a complete Metaproxy configuration file. It includes
a standalone configuration that makes Metaproxy offer Z39.50 and SRU support
on port 9070. The modules in use are http_file (to serve XSL files),
sru_z3950 (SRU service), cql_rpn (CQL to RPN conversion), xquery (to convert
MARCXML to BIBFRAME), record_transform (to convert MARC21 to MARCXML), virt_db
(for database rewrite), log (to perform backend logging) and, finally,
z3950_client to interface a Z39.50 target.

It is important that the "xquery" module comes before the "record_transform"
so that the "xquery" moduel sees XML _only_ and not ISO2709-records. If it
does, they will be ignored (passed through) by the "xquery" module.

The xquery'module script name points to the full path of zorba3-0.xqy part
of marc2bibframe . Do not move zorba3-0.xqy from its place within the
marc2bibframe directory as other files are referred to and their relative
location must be preserved.

cql2pqf.txt
-----------
Contains a simple DC/CQL profile for driving a CQL to RPN conversion.
It is referred to from the cql_rpn filter in config.xml .

explain.xml
-----------

SRU explain sample configuration. It is referred to from the sru_z3950
filter in config.xml .

xsl/..
------

Client side XSL for brief - and full display. These must be located
so that the http_file filter can fetch them. For example, if these
files are located in /usr/share/bibframe/xsl , then http_file would hold

      <filter type="http_file">
        <area>
          <documentroot>/usr/share/bibframe/xsl</documentroot>
          <prefix></prefix>
          <passthru>true</passthru>
        </area>
      </filter>

